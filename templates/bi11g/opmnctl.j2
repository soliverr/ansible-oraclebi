#!/bin/sh
#
# chkconfig:   345 85 15
# description: per domain Oracle BI 11g service init script
 
### BEGIN INIT INFO
# Provides: {{ oracle_bi_domain }}-opmn
# Required-Start: $network $local_fs
# Required-Stop:
# Should-Start:
# Should-Stop:
# Default-Start: 3 4 5
# Default-Stop: 0 1 2 6
# Short-Description: per domain Oracle BI services.
# Description: Starts and stops per domain all required Oracle BI services.
### END INIT INFO

{{ ansible_managed | comment }}

#. /etc/rc.d/init.d/functions

# Get domain specific config file
if [ -r "{{ oracle_bi_sysconfig_dir }}/bi-{{ oracle_bi_domain|replace( '_', '-') }}" ]; then
    . {{ oracle_bi_sysconfig_dir }}/bi-{{ oracle_bi_domain|replace( '_', '-') }}
fi

# Define default DOMAIN_HOME
BI_HOME="${BI_HOME:-{{ oracle_bi_home }}}"
ORACLE_INSTANCE="${ORACLE_INSTANCE:-{{ oracle_bi_instance_base }}/{{ oracle_bi_instance }}}"

PROGRAM_START="$BI_HOME/opmn/bin/opmnctl startall"
PROGRAM_STOP="$BI_HOME/opmn/bin/opmnctl stopall"
PROGRAM_STATUS="$BI_HOME/opmn/bin/opmnctl status -l"

#OUT_FILE="$DOMAIN_HOME/bilogs/bi.out"

SERVICE_NAME="Oracle BI {{ oracle_bi_version }} services for {{ oracle_bi_domain }}"

# Define WebLogic user
BI_USER="${BI_USER:-{{ oracle_bi_user }}}"
BI_GROUP="${BI_GROUP:-{{ oracle_bi_group }}}"

RETVAL="0"

# For SELinux we need to use 'runuser' not 'su'
if [ -x "/sbin/runuser" ]; then
    SU="/sbin/runuser -s /bin/sh - $BI_USER"
else
    SU="/bin/su -s /bin/sh - $BI_USER"
fi

[ "$(id -nu 2>/dev/null)" = "$BI_USER" ] && SU="/bin/sh"

export ORACLE_INSTANCE BI_HOME

start() {
        echo -n $"Starting $SERVICE_NAME ... "
        #echo "`date` Starting $SERVICE_NAME ... " >> $OUT_FILE 2>&1

        $SU -c "$PROGRAM_START"

        echo
}

stop() {
        echo -n $"Stopping $SERVICE_NAME ... "

        $SU -c "$PROGRAM_STOP"

        echo
}

status() {
        echo -n $"Getting status of $SERVICE_NAME ... "

        $SU -c "$PROGRAM_STATUS"

        echo
}

restart() {
        stop
        sleep 10
        start
}

case "$1" in
  start)
        start
        ;;
  stop)
        stop
        ;;
  restart|force-reload|reload)
        restart
        ;;
  condrestart|try-restart)
        #[ -f $LOCKFILE ] && restart
        restart
        ;;
  status)
        status
        ;;
  *)
        echo $"Usage: $0 {start|stop|status|restart|reload|force-reload|condrestart}"
        exit 1
esac

exit $RETVAL
